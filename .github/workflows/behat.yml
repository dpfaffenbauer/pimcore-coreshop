name: Behat
on:
  push:
    branches: [ '4.0', '4.1', 'next' ]
    paths:
      - 'composer.json'
      - 'features/**'
      - 'behat.yml.dist'
      - '*.php'
      - 'src/**'
      - '.github/workflows/behat.yml'
  pull_request:
    branches: [ '4.0', '4.1','next' ]
    paths:
      - 'composer.json'
      - 'features/**'
      - 'behat.yml.dist'
      - '*.php'
      - 'src/**'
      - '.github/workflows/behat.yml'
  release:
    types: [ created ]
  schedule:
    - cron: "0 1 * * 1"


jobs:
  behat:
    runs-on: ubuntu-latest
    env:
      APP_ENV: "test"
      CORESHOP_SKIP_DB_SETUP: "1"
      PIMCORE_TEST_DB_DSN: "mysql://root:root@127.0.0.1:3306/coreshop_test"
      PIMCORE_INSTALL_ADMIN_USERNAME: "admin"
      PIMCORE_INSTALL_ADMIN_PASSWORD: "admin"
      PIMCORE_INSTALL_MYSQL_HOST_SOCKET: "127.0.0.1"
      PIMCORE_INSTALL_MYSQL_USERNAME: "root"
      PIMCORE_INSTALL_MYSQL_PASSWORD: "root"
      PIMCORE_INSTALL_MYSQL_DATABASE: "coreshop_test"
      PIMCORE_INSTALL_MYSQL_PORT: "3306"
      PIMCORE_KERNEL_CLASS: 'Kernel'

    strategy:
      matrix:
        php: [ 8.3, 8.4 ]
        pimcore: [ ^11.5, ^12.0 ]
        jms: [ ^4.0, ^5.0 ]
        dependencies: [ highest ]
        exclude:
          - pimcore: ^11.5
            php: 8.4

    services:
      database:
        image: "mysql:8"
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    name: "${{ matrix.pimcore }}, PHP ${{ matrix.php }}, Deps ${{ matrix.dependencies }}, JMS ${{ matrix.jms }}"

    steps:
    - uses: actions/checkout@v4

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
        extensions: intl, gd, simpleXML, dom, exif, fileinfo, iconv, mbstring, mysqli, pdo_mysql, zip, zlib

    - name: Check PHP Version
      run: php -v

    - name: Setup DB
      run: |
        mysql --host 127.0.0.1 --port ${{ job.services.database.ports['3306'] }} -uroot -proot -e "CREATE DATABASE coreshop_test CHARSET=utf8mb4;"

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: jms/serializer-bundle
      run: composer require "jms/serializer-bundle:${{ matrix.jms }}" --no-update --no-scripts

    - name: pimcore/pimcore
      run: |
        composer req pimcore/pimcore:${{ matrix.pimcore }} --no-interaction --no-scripts --no-update
        if [ "${{ matrix.pimcore }}" == "^11.5" ]; then
          composer req pimcore/admin-ui-classic-bundle:^1.6 --no-interaction --no-scripts --no-update
        else
          composer req pimcore/admin-ui-classic-bundle:^2.0 --no-interaction --no-scripts --no-update
          composer req payum/payum:1.7.x-dev --no-interaction --no-scripts --no-update
        fi
        

    - if: matrix.dependencies == 'highest'
      name: Install dependencies highest
      run: composer update --no-progress --prefer-dist --optimize-autoloader

    - if: matrix.dependencies == 'lowest'
      name: Install dependencies lowest
      run: composer update --no-progress --prefer-dist --optimize-autoloader --prefer-lowest

    - name: Cache clear
      run: bin/console cache:clear

    - name: Assets Install
      run: bin/console assets:install --symlink

    - name: Install Pimcore
      run: PIMCORE_KERNEL_CLASS=Kernel vendor/bin/pimcore-install --env=test --skip-database-config

    - name: Install CoreShop
      run: |
        bin/console coreshop:install

    - name: Run Behat
      run: vendor/bin/behat --strict --no-interaction -vvv -f progress --config behat.yml.dist -p default
